_context.invoke("Nittro.Extras.CheckList",function(DOM,Arrays){var CheckList=_context.extend("Nittro.Object",function(options){this._={options:Arrays.mergeTree({},CheckList.defaults,options)},"string"==typeof this._.options.container&&(this._.options.container=DOM.getById(this._.options.container)),this._handleMouseDown=this._handleMouseDown.bind(this),this._handleClick=this._handleClick.bind(this),DOM.addListener(this._.options.container,"mousedown",this._handleMouseDown),DOM.addListener(this._.options.container,"click",this._handleClick)},{STATIC:{defaults:{container:null,items:null,boundary:"parent",horizontal:!1}},destroy:function(){DOM.removeListener(this._.options.container,"mousedown",this._handleMouseDown),DOM.removeListener(this._.options.container,"click",this._handleClick)},_handleClick:function(evt){var target=this._getTarget(evt.target),items=this._getItems();items.indexOf(target)!==-1&&evt.preventDefault()},_handleMouseDown:function(mdevt){var target=this._getTarget(mdevt.target),items=this._getItems(),start=target?items.indexOf(target):-1;if(start!==-1){mdevt.preventDefault(),this.trigger("start",{target:target});var states,boundaryElems=this._getBoundaryElements(items),boundaries=this._getBoundaries(boundaryElems,start),originalStates=items.map(this._getItemState.bind(this)),state=!originalStates[start];this._setItemState(target,state),states=originalStates.slice(),states[start]=state;var handleMove=this._getMoveHandler(items,boundaries,originalStates,states,start,state),end=function(muevt){muevt&&muevt.preventDefault(),DOM.removeListener(document,"mousemove",handleMove),DOM.removeListener(document,"mouseup",end),muevt&&this._getTarget(muevt.target)===target||states.some(function(s,i){return i!==start&&s!==originalStates[i]})?this.trigger("change"):this._setItemState(target,!state),this.trigger("end")}.bind(this);DOM.addListener(document,"mousemove",handleMove),DOM.addListener(document,"mouseup",end)}},_getMoveHandler:function(items,boundaries,originalStates,states,start,state){var pos,horiz=this._.options.horizontal,n=items.length;return function(evt){evt.preventDefault(),pos=horiz?evt.clientX:evt.clientY;for(var i=0;i<n;i++)i!==start&&originalStates[i]!==state&&(i<start&&pos<boundaries[i]||i>start&&pos>boundaries[i]?states[i]!==state&&(this._setItemState(items[i],state),states[i]=state):states[i]!==!state&&(this._setItemState(items[i],!state),states[i]=!state))}.bind(this)},_getTarget:function(target){return target},_setItemState:function(item,state){item.checked=state},_getItemState:function(item){return item.checked},_getItems:function(){return null===this._.options.items?Arrays.createFrom(this._.options.container.getElementsByTagName("input")).filter(function(elem){return"checkbox"===elem.type}):DOM.getByClassName(this._.options.items,this._.options.container)},_getBoundaryElements:function(items){if(this._.options.boundary){if("parent"===this._.options.boundary)return items.map(function(elem){return elem.parentNode});var sel=this._.options.boundary.split(/\./);return DOM.closest(items,sel[0],sel[1])}return items},_getBoundaries:function(elements,start){return this._.options.horizontal?elements.map(function(elem,i){var rect=elem.getBoundingClientRect();return i<start?rect.right:i>start?rect.left:null}):elements.map(function(elem,i){var rect=elem.getBoundingClientRect();return i<start?rect.bottom:i>start?rect.top:null})}});_context.register(CheckList,"CheckList")},{DOM:"Utils.DOM",Arrays:"Utils.Arrays"});